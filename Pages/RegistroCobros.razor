@page "/cobro"

@using Miguel_P2_AP2.Models
@using Miguel_P2_AP2.BLL

@inject IToastService toast



<EditForm Model="cobros" OnInvalidSubmit="Guardar">
    <DataAnnotationsValidator/>

    <div class="card">
        <div class="card-header">
            <h3>Registro de Cobros</h3>
        </div>
    </div>
    <div class="card-body">
        <form>
            @*ID*@
            <div class="form-group">
                <label>Id:</label>
                <div class="input-group">
                    <InputNumber class="form-control col-4" @bind-Value="cobros.CobroId"></InputNumber>
                    <ValidationMessage For="@(() => cobros.CobroId )"></ValidationMessage>
                    <button type="button" class="btn btn-primary input-group-append" @onclick="Buscar">Buscar</button>
                </div>
            </div>


            <div class="form-row">
                @*Cliente Id*@
                <div class="form-group col-6">
                    <label>Cliente</label>
                    <select class="form-control" @bind="cobros.ClienteId">
                        @foreach (var items in ClientesBLL.GetList())
                        {
                            <option value="@items.ClienteId">@items.Nombres</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => cobros.ClienteId)"></ValidationMessage>
                </div>

                @*Fecha*@
                <div class="form-group col-10">
                    <label>Fecha</label>
                    <InputDate class="form-group" @bind-Value="cobros.Fecha"></InputDate>
                    <ValidationMessage For="(() => cobros.Fecha)"></ValidationMessage>
                </div>
            </div>

            <div class="card-header">
                <div class="form-row">
                    <div class="form-group col-5">
                        <label>Ventas</label>
                        <select class="form-control" @bind="VentaId" @onclick="ObtenerDatos">
                            @foreach (var items in VentasBLL.GetList())
                            {
                                <option value="@items.VentaId">@items.VentaId</option>
                            }
                        </select>
                        <div class="form-group-append">
                            <button type="button" class="btn btn-primary input-group-append" @onclick="agregarAlDetalle">AgregarAlGrid</button>

                        </div>
                    </div>
                </div>
            </div>

            <div class="table-responsive text-nowrap">
                <label>Facturas Pendientes</label>
                <table class="table table-striped">
                    <thead class="thead-light">
                        <tr>
                            <th>Id</th>
                            <th>Fecha</th>
                            <th>Monto</th>
                            <th>Balance</th>
                            <th>Cobrado</th>
                            <th>Pagar</th>
                            <th>     </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white">
                        @foreach (var item in cobros.CobrosDetalle)
                        {
                            <tr>
                                <td>@VentasBLL.Buscar(item.VentaId).VentaId</td>
                                <td>@VentasBLL.Buscar(item.VentaId).Fecha</td>
                                <td>@VentasBLL.Buscar(item.VentaId).Monto</td>
                                <td>@VentasBLL.Buscar(item.VentaId).Balance</td>
                                <td>@(item.Pagar == true ? VentasBLL.Buscar(item.VentaId).Balance : item.Cobrado)</td>
                                <td><input type="checkbox" class="form-check-input" @bind="item.Pagar" @onclick="CalcularCobrado" /></td>
                                <td><button type="button" class="btn btn-outline-danger" @onclick="(() => EliminarDetalle(item))">Remover</button></td>
                            </tr>
                        }

                    </tbody>

                </table>
            </div>

            <div class="card-footer">
                <div class="form-row">
                    <div class="form-group col-4">
                        <label>Totales</label>
                        <InputNumber class="form-control" @bind-Value="cobros.Totales"></InputNumber>
                    </div>
                    <div class="col-3">

                    </div>
                    <div class="form-group col-10-3">
                        <label>Total</label>
                        <InputNumber class="form-control" @bind-Value="TotalCobrado"></InputNumber>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-12">
                        <label>Observaciones</label>
                        <textarea class="form-control" @bind="cobros.Observaciones" rows="2" cols="20"></textarea>
                        <DataAnnotationsValidator/>
                    </div>
                </div>

                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-lg btn-secondary" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
                </div>
            </div>

           
           
        </form>
    </div>

    


</EditForm>

@code {

    private Cobros cobros = new Cobros();

    public int VentaId { get; set; }

    public double Monto { get; set; }
    public double Balance { get; set; }
    public double Cobrado { get; set; }
    public double TotalCobrado { get; set; }
    public int CobrosId { get; set; }
    public bool Pagar { get; set; }

    public List<Clientes> ListaClientes = new List<Clientes>();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
    }

    public void Nuevo()
    {
        cobros = new Cobros();
    }

    public void Guardar()
    {
        bool guardado = CobrosBLL.Guardar(cobros);
        if (guardado)
        {
            Nuevo();
            toast.ShowSuccess("Guardado");
        }
        else
        {
            toast.ShowError("No Guardado");
        }
    }

    public void Buscar()
    {
        if(cobros.CobroId > 0)
        {
            var encontrado = CobrosBLL.Buscar(cobros.CobroId);

            if (encontrado != null)
            {
                this.cobros = encontrado;
            }
            else
            {
                toast.ShowError("No encontrado");
            }

        }
    }

    public void Eliminar()
    {
        bool eliminado = CobrosBLL.Eliminar(cobros.CobroId);

        if (eliminado)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado Perfectamente");
        }
        else
        {
            toast.ShowError("Hubo un error");
        }
    }

    public void agregarAlDetalle()
    {
        cobros.CobrosDetalle.Add(new CobrosDetalle
        {
            CobroDetalleId = 0,
            CobroId = cobros.CobroId,
            VentaId = VentaId,
            Fecha = DateTime.Now,
            Monto = Monto,
            Balance = Balance,
            Cobrado = Cobrado,
            Pagar = Pagar,
        });



    }

    public void ObtenerDatos()
    {
        var ventas = VentasBLL.Buscar(VentaId);
    }

    private void EliminarDetalle(CobrosDetalle detalle)
    {
        cobros.CobrosDetalle.Remove(detalle);
        CalcularMonto();
    }

    public void CalcularMonto()
    {
        cobros.Totales = 0;
        foreach(var items in cobros.CobrosDetalle)
        {
            cobros.Totales += VentasBLL.Buscar(items.VentaId).Monto;
        }
    }

    public void CalcularCobrado()
    {
        foreach(var items in cobros.CobrosDetalle)
        {
            if (items.Pagar)
            {
                TotalCobrado += items.Balance;
            }
            else
            {
                TotalCobrado += 0;
            }
        }
    }



}
